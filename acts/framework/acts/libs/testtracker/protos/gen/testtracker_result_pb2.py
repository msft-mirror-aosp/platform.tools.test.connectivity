# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: testtracker_result.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18testtracker_result.proto\"\xa8\x01\n\x08Property\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\x0cstring_value\x18\x65 \x01(\tH\x00\x12\x13\n\tint_value\x18\x66 \x01(\x03H\x00\x12\x16\n\x0c\x64ouble_value\x18g \x01(\x01H\x00\x12\x14\n\njson_value\x18h \x01(\tH\x00\x12\x14\n\nbool_value\x18i \x01(\x08H\x00\x12\x14\n\nbyte_value\x18j \x01(\x0cH\x00\x42\x07\n\x05value\"\xcc\x02\n\x06Result\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04uuid\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x0e\n\x06\x64\x65tail\x18\x04 \x01(\t\x12\x1b\n\x08property\x18\x05 \x03(\x0b\x32\t.Property\x12\x11\n\ttimestamp\x18\n \x01(\t\x12.\n\x06status\x18\r \x01(\x0e\x32\x0e.Result.Status:\x0eSTATUS_UNKNOWN\"\xa0\x01\n\x06Status\x12\x12\n\x0eSTATUS_UNKNOWN\x10\x00\x12\n\n\x06PASSED\x10\x01\x12\n\n\x06\x46\x41ILED\x10\x02\x12\t\n\x05\x45RROR\x10\x03\x12\x0f\n\x0bINTERRUPTED\x10\x04\x12\r\n\tCANCELLED\x10\x05\x12\x0c\n\x08\x46ILTERED\x10\x06\x12\x0b\n\x07SKIPPED\x10\x07\x12\x0e\n\nSUPPRESSED\x10\x08\x12\x0b\n\x07\x42LOCKED\x10\t\x12\x07\n\x03TBR\x10\x11')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'testtracker_result_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PROPERTY._serialized_start=29
  _PROPERTY._serialized_end=197
  _RESULT._serialized_start=200
  _RESULT._serialized_end=532
  _RESULT_STATUS._serialized_start=372
  _RESULT_STATUS._serialized_end=532
# @@protoc_insertion_point(module_scope)
