This tool serves the following purposes:
=======================================

1. Swiss Army Tool

   Like a swiss army tool, applicable on any platform: Linux, MAC, Windows.

   Handle big data (Up-to 2 million sampling data). Quick response to drawing chart, Zoom-In/Out.
 
   No dependencies: click and execute. Python installation is not required.

   Offline/Online: applicable with/without internet

   Free Zoom-In, Zoom-Out in any scale. Mark start-end to Zoom-In, double click to Zoom-Out to previous scale.

2. File Format Auto-Detection

   Detect the input file format automatically:
     data type:                   ascii or binary
     sampling rate:               detect the sampling rate via the timestamp in the 1st column from the original data, or read from the command line
     multiple columns:          2 or 3  (e.g. timestamp, current, voltage)
     single column:               1 column of current, voltage... without any timestamp (not yet implemented)
   
   Input file types:
     Monsoon original csv (ascii) file which is converted from Monsoon PT5 format (5000 samples per second)
     Monsoon raw csv (ascii) file which is generated by "Manual Assistant Tool"   (5000 / 500 or other samples per second)
     Audio PCM (binary, 8-Unsigned-Char) file which is generated by audio tool    (44100Hz or given samples per second)

3. Generate html file to draw power chart for power breakdown testing

   Calculate average current for the whole period or a given marked start-end time

   Two filters can be applied based on the given interval(ms) and the voltage threshold(mA)

   Flat the curve: round down any large data to max 2500 (3000 is exception for cutting the interested wave)

   Free Zoom-In and Zoom-Out

4. Generate html to draw audio chart in time-domain for audio signal processing

   Draw the audio chart in time-domain

   Low-Pass, High-Pass, Band-Pass, Noise-Reduction fileters can be applied based on the given frequency(like 1575Hz) (not yet implemented)

   Free Zoom-In and Zoom-Out


Syntax:
=======

power-audio-chart.py --input-file input_file_name --output-file output_file_name --template-file template_file_name